[{"D:\\it-incubator-todolist-ts-01\\src\\api\\todolist-api.ts":"1","D:\\it-incubator-todolist-ts-01\\src\\index.tsx":"2","D:\\it-incubator-todolist-ts-01\\src\\App.tsx":"3","D:\\it-incubator-todolist-ts-01\\src\\state\\todolists-reducer.ts":"4","D:\\it-incubator-todolist-ts-01\\src\\AddItemForm.tsx":"5","D:\\it-incubator-todolist-ts-01\\src\\Task.tsx":"6","D:\\it-incubator-todolist-ts-01\\src\\state\\store.ts":"7","D:\\it-incubator-todolist-ts-01\\src\\state\\tasks-reducer.ts":"8","D:\\it-incubator-todolist-ts-01\\src\\Todolist.tsx":"9","D:\\it-incubator-todolist-ts-01\\src\\reportWebVitals.ts":"10","D:\\it-incubator-todolist-ts-01\\src\\EditableSpan.tsx":"11"},{"size":2475,"mtime":1632946834130,"results":"12","hashOfConfig":"13"},{"size":641,"mtime":1631952064146,"results":"14","hashOfConfig":"13"},{"size":4716,"mtime":1632944540384,"results":"15","hashOfConfig":"13"},{"size":3276,"mtime":1632930927033,"results":"16","hashOfConfig":"13"},{"size":1474,"mtime":1631952064089,"results":"17","hashOfConfig":"13"},{"size":1731,"mtime":1632935212749,"results":"18","hashOfConfig":"13"},{"size":968,"mtime":1632859250133,"results":"19","hashOfConfig":"13"},{"size":5701,"mtime":1632948351006,"results":"20","hashOfConfig":"13"},{"size":3705,"mtime":1632939858967,"results":"21","hashOfConfig":"13"},{"size":425,"mtime":1631952064170,"results":"22","hashOfConfig":"13"},{"size":952,"mtime":1631952064123,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1btcdy1",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\it-incubator-todolist-ts-01\\src\\api\\todolist-api.ts",[],"D:\\it-incubator-todolist-ts-01\\src\\index.tsx",[],["50","51"],"D:\\it-incubator-todolist-ts-01\\src\\App.tsx",["52","53","54","55","56","57","58","59"],"import React, {useCallback, useEffect} from 'react'\r\nimport './App.css';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {AppBar, Button, Container, Grid, IconButton, Paper, Toolbar, Typography} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons';\r\nimport {\r\n    addTodolistAC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleAC,\r\n    FilterValuesType,\r\n    getTodoListsTC,\r\n    removeTodolistAC,\r\n    TodoListsDomainType\r\n} from './state/todolists-reducer';\r\nimport {addTaskTC, changeTaskStatusTC, changeTaskTitleAC, removeTaskTC} from './state/tasks-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from './state/store';\r\nimport {TaskStatuses, TaskType} from \"./api/todolist-api\";\r\nimport {Todolist} from \"./Todolist\";\r\n\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n    const todolists = useSelector<AppRootStateType, Array<TodoListsDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        debugger\r\n        dispatch(getTodoListsTC())\r\n\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId);\r\n        dispatch(thunk);\r\n    }, []);\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId);\r\n        debugger\r\n        dispatch(thunk);\r\n    }, []);\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = changeTaskStatusTC(todolistId, id, status);\r\n        dispatch(thunk);\r\n    }, []);\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const action = changeTaskTitleAC(id, newTitle, todolistId);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const action = removeTodolistAC(id);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const action = changeTodolistTitleAC(id, title);\r\n        dispatch(action);\r\n    }, []);\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const action = addTodolistAC(title);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Grid container style={{padding: \"20px\"}}>\r\n                    <AddItemForm addItem={addTodolist}/>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        todolists.map(tl => {\r\n                            let allTodolistTasks = tasks[tl.id];\r\n\r\n                            return <Grid item key={tl.id}>\r\n                                <Paper style={{padding: \"10px\"}}>\r\n                                    <Todolist\r\n                                        id={tl.id}\r\n                                        title={tl.title}\r\n                                        tasks={allTodolistTasks}\r\n                                        removeTask={removeTask}\r\n                                        changeFilter={changeFilter}\r\n                                        addTask={addTask}\r\n                                        changeTaskStatus={changeStatus}\r\n                                        filter={tl.filter}\r\n                                        removeTodolist={removeTodolist}\r\n                                        changeTaskTitle={changeTaskTitle}\r\n                                        changeTodolistTitle={changeTodolistTitle}\r\n                                    />\r\n                                </Paper>\r\n                            </Grid>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\it-incubator-todolist-ts-01\\src\\state\\todolists-reducer.ts",[],"D:\\it-incubator-todolist-ts-01\\src\\AddItemForm.tsx",["60","61","62"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n",["63","64"],"D:\\it-incubator-todolist-ts-01\\src\\Task.tsx",["65","66","67"],"D:\\it-incubator-todolist-ts-01\\src\\state\\store.ts",[],"D:\\it-incubator-todolist-ts-01\\src\\state\\tasks-reducer.ts",[],"D:\\it-incubator-todolist-ts-01\\src\\Todolist.tsx",["68","69","70","71","72","73"],"D:\\it-incubator-todolist-ts-01\\src\\reportWebVitals.ts",[],"D:\\it-incubator-todolist-ts-01\\src\\EditableSpan.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":36,"column":8,"nodeType":"80","endLine":36,"endColumn":10,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":41,"column":8,"nodeType":"80","endLine":41,"endColumn":10,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"82","line":47,"column":8,"nodeType":"80","endLine":47,"endColumn":10,"suggestions":"84"},{"ruleId":"78","severity":1,"message":"82","line":52,"column":8,"nodeType":"80","endLine":52,"endColumn":10,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"82","line":57,"column":8,"nodeType":"80","endLine":57,"endColumn":10,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"82","line":62,"column":8,"nodeType":"80","endLine":62,"endColumn":10,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"82","line":67,"column":8,"nodeType":"80","endLine":67,"endColumn":10,"suggestions":"88"},{"ruleId":"78","severity":1,"message":"82","line":72,"column":8,"nodeType":"80","endLine":72,"endColumn":10,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":9,"nodeType":"92","messageId":"93","endLine":2,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":2,"column":14,"nodeType":"92","messageId":"93","endLine":2,"endColumn":20},{"ruleId":"90","severity":1,"message":"95","line":2,"column":22,"nodeType":"92","messageId":"93","endLine":2,"endColumn":33},{"ruleId":"74","replacedBy":"96"},{"ruleId":"76","replacedBy":"97"},{"ruleId":"78","severity":1,"message":"98","line":16,"column":97,"nodeType":"80","endLine":16,"endColumn":130,"suggestions":"99"},{"ruleId":"78","severity":1,"message":"98","line":21,"column":8,"nodeType":"80","endLine":21,"endColumn":41,"suggestions":"100"},{"ruleId":"78","severity":1,"message":"98","line":25,"column":8,"nodeType":"80","endLine":25,"endColumn":41,"suggestions":"101"},{"ruleId":"78","severity":1,"message":"102","line":32,"column":8,"nodeType":"80","endLine":32,"endColumn":10,"suggestions":"103"},{"ruleId":"78","severity":1,"message":"98","line":35,"column":8,"nodeType":"80","endLine":35,"endColumn":33,"suggestions":"104"},{"ruleId":"78","severity":1,"message":"98","line":42,"column":8,"nodeType":"80","endLine":42,"endColumn":45,"suggestions":"105"},{"ruleId":"78","severity":1,"message":"98","line":44,"column":86,"nodeType":"80","endLine":44,"endColumn":116,"suggestions":"106"},{"ruleId":"78","severity":1,"message":"98","line":45,"column":92,"nodeType":"80","endLine":45,"endColumn":122,"suggestions":"107"},{"ruleId":"78","severity":1,"message":"98","line":46,"column":98,"nodeType":"80","endLine":46,"endColumn":128,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["112"],["113"],["114"],["115"],["116"],["117"],["118"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.",["109"],["110"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["119"],["120"],["121"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["122"],["123"],["124"],["125"],["126"],["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},{"desc":"128","fix":"131"},{"desc":"128","fix":"132"},{"desc":"128","fix":"133"},{"desc":"128","fix":"134"},{"desc":"128","fix":"135"},{"desc":"128","fix":"136"},{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},{"desc":"137","fix":"140"},{"desc":"141","fix":"142"},{"desc":"137","fix":"143"},{"desc":"137","fix":"144"},{"desc":"137","fix":"145"},{"desc":"137","fix":"146"},{"desc":"137","fix":"147"},"Update the dependencies array to be: [dispatch]",{"range":"148","text":"149"},{"range":"150","text":"149"},{"range":"151","text":"149"},{"range":"152","text":"149"},{"range":"153","text":"149"},{"range":"154","text":"149"},{"range":"155","text":"149"},{"range":"156","text":"149"},"Update the dependencies array to be: [props]",{"range":"157","text":"158"},{"range":"159","text":"158"},{"range":"160","text":"158"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"161","text":"162"},{"range":"163","text":"158"},{"range":"164","text":"158"},{"range":"165","text":"158"},{"range":"166","text":"158"},{"range":"167","text":"158"},[1205,1207],"[dispatch]",[1378,1380],[1570,1572],[1782,1784],[1996,1998],[2200,2202],[2352,2354],[2536,2538],[723,756],"[props]",[1029,1062],[1219,1252],[1246,1248],"[dispatch, props.id]",[1352,1377],[1590,1627],[1717,1747],[1841,1871],[1971,2001]]